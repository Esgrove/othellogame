name: Python

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/python.yml"
      - "python/**.py"
      - "python/poetry.lock"
      - "python/pyproject.toml"
  pull_request:
    paths:
      - ".github/workflows/python.yml"
      - "python/**.py"
      - "python/poetry.lock"
      - "python/pyproject.toml"

# Cancel previous runs for PRs but not pushes to main
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Python environment
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: python/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('python/poetry.lock') }}
          restore-keys: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Ruff format
        uses: astral-sh/ruff-action@v3
        with:
          src: python
          args: format --check --verbose

      - name: Ruff lint
        uses: astral-sh/ruff-action@v3
        with:
          src: python
          args: check --verbose

      - name: Run tests
        run: poetry run pytest -v --cov=othello tests
