[tool.poetry]
name = "othello_python"
version = "2.2.1"
description = "A simple Othello CLI game implementation."
authors = ["Akseli Lukkarila <esgrove@outlook.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/Esgrove/othellogame"
packages = [{ include = "othello" }]

[tool.poetry.dependencies]
python = "^3.11"
colorama = "^0.4.6"
pytest = "^8.3.2"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
ruff = "^0.5.6"

[tool.poetry.group.test.dependencies]
pytest-cov = "^5.0.0"
pytest = "^8.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''venv*'''

[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
include = ["*.py", "*.pyi", "**/pyproject.toml"]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "W", "N", "UP"]
ignore = []
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    #"I",  disable isort rules
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv*",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
# https://beta.ruff.rs/docs/settings/#isort
case-sensitive = false
combine-as-imports = true
lines-between-types = 1
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/options.html
# profile = "black"
# manually specifying black compatibility to override line length
combine_as_imports = true
ensure_newline_before_comments = true
extend_skip = [".idea", ".vscode", ".venv", "venv"]
extend_skip_glob = ["venv*"]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 100
multi_line_output = 3
py_version = 311
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
use_parentheses = true
